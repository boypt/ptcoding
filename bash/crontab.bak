# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

26 09 * * 1-5 /home/ubuntu/ptcoding/stock-tools/index2serverchan.py 
00 10 * * 1-5 /home/ubuntu/ptcoding/stock-tools/index2serverchan.py 
30 10,11,13,14 * * 1-5 /home/ubuntu/ptcoding/stock-tools/index2serverchan.py 
01 15 * * 1-5 /home/ubuntu/ptcoding/stock-tools/index2serverchan.py 

00 0 * * * /usr/bin/find /srv/md/radio/audio/ -name '*.opus' -mtime +2 -delete
41 7 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
01 8 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
31 8 * * 1-5 /usr/bin/killall -q ffmpeg
41 8 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
01 9 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
16 9 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
32 9 * * 1-5 /usr/bin/killall -q ffmpeg
31 11 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
01 12 * * 1-5 /home/ubuntu/ptcoding/bash/recm3u8.sh gs2
01 13 * * 1-5 /usr/bin/killall -q ffmpeg
05 18 * * 6 /home/ubuntu/ptcoding/bash/recm3u8.sh zj
31 18 * * 6 /home/ubuntu/ptcoding/bash/recm3u8.sh zj
01 19 * * 6 /usr/bin/killall -q ffmpeg


#!/bin/sh

# Set Linux PATH Environment Variables
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin:$PATH

# Check If You Are Root
if [[ "$(id -u)" != "0" ]]; then
	echo -e "\033[31m Error: You must be root to run this script! \033[0m"
	exit 1
fi

# Xware defintions
PREFIX=/root/xunlei
DESC="Xware"
SCRIPT=/root/xware
DAEMON=${PREFIX}/portal
LIB_DIR=${PREFIX}/lib
LIB_A=${LIB_DIR}/ETMDaemon
LIB_B=${LIB_DIR}/EmbedThunderManager
PID_FILE=${PREFIX}/xware.pid
LOG_FILE=${PREFIX}/xware.log
CFG_DIR=${PREFIX}/cfg
MOUNT_CFG=${CFG_DIR}/thunder_mounts.cfg

do_mounts_cfg() {
	echo "avaliable_mount_path_pattern" >$MOUNT_CFG
	echo "{" >>$MOUNT_CFG
	MOUNT_LIST=`df -a | grep "/dev/sd*\|/dev/hd*" | awk '{print $6}'`
	for MOUNT in $MOUNT_LIST; do echo $MOUNT >>$MOUNT_CFG; done
	echo "}" >>$MOUNT_CFG

}

do_boot() {
	if ! egrep -q "xware start" /root/rc.popocloud; then
		sed -i "/while true/i\xware start" /root/rc.popocloud
		echo -e "\033[32m $DESC boot added. \033[0m"
	else
		sed -i "/xware start/d" /root/rc.popocloud
		echo -e "\033[32m $DESC boot removed. \033[0m"
	fi
}

do_crontab() {
	crontab -l | grep "xware monitor" >/dev/null 2>&1
	if [[ "$?" != "0" ]]; then
		echo "*/15 * * * * $SCRIPT monitor >>$LOG_FILE " >>/var/spool/cron/crontabs/root
		echo -e "\033[32m $DESC crontab added. \033[0m"
	else
		crontab -l 2>/dev/null | grep -v "xware monitor" | crontab -
		echo -e "\033[32m $DESC crontab removed. \033[0m"
	fi
}

do_showlogs() {
	echo -e "\033[32m $DESC logs located in $LOG_FILE. \033[0m"
	cat $LOG_FILE
}

do_stop() {
	if [[ -r $PID_FILE ]]; then
		read PID <$PID_FILE
		if [[ -d /proc/${PID} ]]; then
			 $DAEMON -s >/dev/null 2>&1
			 rm -f $PID_FILE
			 echo -e "\033[32m $DESC successfully stoped. \033[0m"
		else
			 $DAEMON -s >/dev/null 2>&1
			 rm -f $PID_FILE
			 echo -e "\033[33m $DESC accidently crashed. \033[0m"
		fi
	else
		echo -e "\033[33m $DESC appearlly not running. \033[0m"
	fi
	killall ETMDaemon >/dev/null 2>&1
	killall EmbedThunderManager >/dev/null 2>&1
}

do_check() {
	# Check file/folder if exist
	[[ -f $DAEMON ]] && [[ -f $LIB_A ]] && [[ -f $LIB_B ]] || exit 2
	[[ -d $CFG_DIR ]] || mkdir -p $CFG_DIR
	[[ -f $LOG_FILE ]] || touch $LOG_FILE

	# Check file permissions
	[[ -x $DAEMON ]] || chmod +x $DAEMON
	[[ -x $LIB_A ]] || chmod +x $LIB_A
	[[ -x $LIB_B ]] || chmod +x $LIB_B
}

do_start() {
	do_check

	if [[ -r $PID_FILE ]]; then
		read PID <$PID_FILE
		if [[ -d /proc/${PID} ]]; then
			echo -e "\033[33m $DESC already running. \033[0m"
		else
			echo -e "\033[33m $DESC accidently crashed. \033[0m"
			rm -f $PID_FILE
			do_mounts_cfg && $DAEMON >/dev/null 2>&1
			if [[ "$?" = "0" ]]; then
				PID=`pgrep ETMDaemon`
				echo $PID > $PID_FILE
				echo -e "\033[32m $DESC successfully restarted. \033[0m"
			else
				rm -f $PID_FILE
				echo -e "\033[31m $DESC failed to start. \033[0m"
			fi
		fi
	else
		do_mounts_cfg && $DAEMON >/dev/null 2>&1
		if [[ "$?" = "0" ]]; then
			PID=`pgrep ETMDaemon`
			echo $PID > $PID_FILE
			echo -e "\033[32m $DESC successfully started. \033[0m"
		else
			rm -f $PID_FILE
			echo -e "\033[31m $DESC failed to start. \033[0m"
		fi
	fi
}

do_restart() {
	do_stop
	sleep 2
	do_start
}

do_status() {
	LAN_IP=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
	PORT=9000
	STATUS=`wget -t 3 -T 3 -qO- http://${LAN_IP}:${PORT}/getsysinfo`
	if [[ "$?" == "0" ]]; then
		echo $STATUS
	else
		echo -e "\033[33m $DESC appearlly not running. \033[0m"
	fi
}

do_monitor() {
	do_status | grep "\[ 0, 1, 1, 1, \"" >/dev/null 2>&1
	if [[ "$?" == "0" ]]; then
		echo "$(date +"%Y-%m-%d_%T") $DESC looks ok."
	else
		do_restart
	echo "$(date +"%Y-%m-%d_%T") $DESC goes error, try to restart."
	fi
}

# See how we were called
case "$1" in
	start)
	do_start
	;;
	stop)
	do_stop
	;;
	restart)
	do_restart
	;;
	status)
	do_status
	;;
	boot)
	do_boot
	;;
	crontab)
	do_crontab
	;;
	showlogs)
	do_showlogs
	;;
	monitor)
	do_monitor
	;;
	*)
	echo -e "\033[36m Usage: xware {start|stop|restart|status|boot|crontab|showlogs} \033[0m"
	exit 3
	;;
esac

exit 0
